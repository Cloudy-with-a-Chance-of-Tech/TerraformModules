#!/bin/bash
# Quick validation script for environment setup

echo "üîç Environment Setup Validation"
echo "================================"

# Check if we're in the right directory
if [ ! -f "Makefile" ] || [ ! -d "scripts" ]; then
    echo "‚ùå Please run this script from the TerraformModules root directory"
    exit 1
fi

echo "‚úÖ In correct directory"

# Check essential files
echo ""
echo "üìÅ Checking essential files..."

files_to_check=(
    ".env"
    ".env.example"
    "Makefile"
    "scripts/load-env.sh"
    "scripts/pipeline-env.sh"
    "scripts/setup-dev.sh"
    "ENVIRONMENT_SETUP.md"
)

for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file exists"
    else
        echo "‚ùå $file missing"
    fi
done

# Check script permissions
echo ""
echo "üîß Checking script permissions..."
for script in scripts/*.sh; do
    if [ -x "$script" ]; then
        echo "‚úÖ $script is executable"
    else
        echo "‚ö†Ô∏è  $script needs executable permission (run: chmod +x $script)"
    fi
done

# Check .env file content
echo ""
echo "üîê Checking .env file..."
if [ -f ".env" ]; then
    if grep -q "your-azure-" .env; then
        echo "‚ö†Ô∏è  .env file contains placeholder values"
        echo "   Edit .env file with your actual credentials to proceed"
    else
        echo "‚úÖ .env file appears to have real values"
    fi
else
    echo "‚ùå .env file missing - run 'cp .env.example .env' and edit with your credentials"
fi

# Check gitignore
echo ""
echo "üõ°Ô∏è  Checking .gitignore..."
if grep -q "\.env$" .gitignore 2>/dev/null; then
    echo "‚úÖ .env files are properly gitignored"
else
    echo "‚ö†Ô∏è  .env might not be properly gitignored"
fi

echo ""
echo "üìã Summary"
echo "=========="
echo "1. If you see ‚ö†Ô∏è  for .env placeholders: Edit .env with your actual Azure credentials"
echo "2. If you see ‚ö†Ô∏è  for script permissions: Run 'chmod +x scripts/*.sh'"
echo "3. Then test with: 'make check-env' and 'make load-env'"
echo "4. Initialize Terraform with: 'make init'"
echo ""
echo "üìñ For detailed instructions, see: ENVIRONMENT_SETUP.md"
